/*
Tangent Switcher 2.7 Maya 2010 Version

Concept and scripting by John P. Neumann (john@animateshmanimate.com) http://animateshmanimate.com
This work is licensed under the 3-clause BSD ("New BSD License") license. 
Licensing information is included in the download.

What is it:

Animators start by blocking in their poses. To make it a "true" blocking in, you need to have your tangents set to stepped. Unfortunately, setting it to be this way by default means you have to go through and select all your keys later and switch them back to spline so you can get your nice arcs. This became annoying to me, so I wrote this script to automagically change all of the tangents to either linear in/stepped out or spline in and out. 

Usage:

Put this script onto your shelf  via source tangentSwitcher.mel; tanSwitcher();.
Click your shelf button and a window will pop up. 
It will auto-detect if you are using character sets and display the appropriate UI for you.
If you don't use character sets, simply select either your object or your control (yes this works on bouncing balls, not just control curves) and choose either stepped or spline. 
It selects all the keys in your current timeline and switches them.
Done.
If you do use character sets your available character sets will be displayed for you. 
Select which ones you wish to modify.
Now select whether you want to switch them to stepped or spline.
It selects all the keys in your current timeline and switches them.
Done.

Limitations:

None known!

Bugs:

None known!

ToDo:

* Try to integrate the graph editor and dope sheet editor directly into the UI
* Use a listbox for the non-character set one as well and have it auto-load anything with an animation curve attached to it
* Put a filter on the aforementioned listbox so users can filter out the objects they want selected

Changelog:

2.7
* changed some procedures to function better
* changed the default of spline tangents to flat which reduces penetration of ground plane issues
* added a button to launch the Graph Editor and the Dope Sheet Editor
* fixed a bug with multi-selection 
* added version checker and popup for 2011 users using the 2010 script
* cleaned up TONS of code
* added better comments to the code
* reformatted the code because it was ugly as hell
* reorganized code for better readability
* took license information out of the script since it's now included as part of the download

2.6
* changed some procedure names and variables
* cleaned up some code

2.5
* redid the layout so it made more sense
* cleaned up the code a bit
* renamed some procedures and reduced rendundancy

2.4
* fixed another nasty bug that made it so that if you had two characters in a scene and you selected a character's character set and changed the tangent and then selected another character set (from either the same character or another), both would inherit the last tangent command given. this was because multi-select is enabled and the selection was not being cleared after the tangents were changed.
* fixed a bug where time was being taken from the entire timeline rather than the current timeline's minimum and maximum values. now if you simply set your options for your timeline like you normally would it will only affect those keyframes.
* removed a menu option so that users would just get the window that they needed rather than prompting them to choose one.

2.3
* fixed a nasty UI bug that disallowed os x users the pleasure of using this script (and since I use os x it kinda matters to me)
* changed the line endings to be *NIX compatible (since Windows is idiotic about how it handles line endings)

2.2
* added about and help buttons
* finished adding option for simple and advanced interfaces

2.1
* began adding simple and advanced features

2.0
* added in options to allow users to choose their in and out tangent types
* cleaned up code
* almost completely re-written, thus the reason for a full version jump

1.2
* added new windows for easier use by average users
* added in a non-character set version
* renamed some procedures to avoid conflicts
* renamed some windows to avoid conflicts

1.1
* rewrote almost from scratch
* removed "update" button
* made character sets load by default
* fixed bug where multiples of the same character sets were listed
* unbroke entire script
* removed useless and/or redundant code
* added code to delete the windows

1.0
* added more buttons to make process easier
* broke entire script
* made window smaller

0.5
* fixed "stepped" option to be stepped and not clamped
* made option to go back to spline instead of linear
* added full gui
* various minor fixes

0.1
* improved snappiness
* made option to go back to linear tangents
* fixed variable errors


Please report any bugs to me! Feedback is appreciated as well, both bad and good
*/

///
/// Begin Layout And Main Functions
///

//Call the Character Set Checker which will load the proper UI
global proc tanSwitcher(){
	if (getApplicationVersionAsFloat() >= 2011){
		//You're using Maya 2011 or higher. You should use the Maya 2011 version
		//Display the 2011 information window
		tanSwitcherMaya2011;
		//Run the appropriate function to check for character sets and load the ui
		checkCharSets;
	}else{
		//You're using Maya 2010 or lower. You've got the right version of the script.
		//Run the appropriate function to check for character sets and load the ui
		checkCharSets;
	}
}


// Check to see if Character Sets are available
global proc checkCharSets(){
	//check for character sets
    string $charSets[] = `ls -type "character"`;
	//find out the size of the array
    int $charSetSize = `size $charSets`;
	//check the size of the array and output the right UI
	if ($charSetSize < 1){
		//For no character sets
        print "No Character Sets. Continuing Happily...";
        noCharSetTangents;
    }else{
		//For character sets
        print "Character Sets found. Continuing Happily...";
        charSetTangents;
    }   
}

///
/// Begin Character Set Layout System
///

global proc charSetTangents(){
//delete the window if it already exists
if (`window -exists tangentWindowChar`){
  deleteUI tangentWindowChar;
}

	// Base window settings
	window
		-title "Tangent Switcher"
		-menuBar true
		-sizeable true
		-topLeftCorner 185 55
		-widthHeight 335 360
		tangentWindowChar;
	
	// Create top menu items
	menu -label "Help";
	menuItem -label "Local help..." -command tanSwitcherHelp;
	menuItem -label "Online help..." -command tanSwitcherOnlineHelp;
	menu -label "About";
	menuItem -label "About Tangent Switcher" -command tanSwitcherAbout;
	
	// Main container for layout
	columnLayout
		-rowSpacing 10
		-adjustableColumn true
		-columnAlign "center"
		containerColumnLayout;
		
	// Start tab layout section
	tabLayout tabs;
	
	// Simple switch for charset
	frameLayout -labelVisible false -height 350 -borderVisible false -marginHeight 10 "Simple Switch";
	rowColumnLayout
	-numberOfColumns 2
	-columnWidth 1 290
	-columnWidth 2 150
	-columnSpacing 1 10
	charsetSimpleSwitchLayout;
	
	columnLayout;
	// Charset text scroll list
	text -label "Select the character sets you wish to change:";
	textScrollList 
	-allowMultiSelection on 
	-height 145 
	-width 300
	charSetScrollList;
	
	columnLayout -columnWidth 300;
	button -label "Stepped Tangents" -width 150 -command steppedTangents;
	button -label "Flat Tangents" -width 150 -command flatTangents;
	button -label "Reload Character Sets" -width 150 -command updateCharacterSets;
	button -label "Graph Editor" -width 150 -command GraphEditor;
	button -label "Dope Sheet Editor" -width 150 -command DopeSheetEditor;
	setParent charsetSimpleSwitchLayout;
	setParent tabs;

	// Advanced switch for charset
	frameLayout -labelVisible false -height 240 -borderVisible false -marginHeight 10 "Advanced Switch";
	rowColumnLayout
	-numberOfColumns 2
	-columnWidth 1 150
	-columnWidth 2 150
	-columnSpacing 1 10
	charsetAdvancedSwitchLayout;
	
	columnLayout;
	text -label "Select your in\n tangent type";
	string $inRadioButton = `radioCollection`;
	string $inSpline, $inLinear, $inClamped, $inFlat, $inPlateau, $inStepped;
	string $inTangent = "spline";
		$inSpline = `radioButton -label "spline" -onCommand "$inTangent = \"spline\""`;
		$inLinear = `radioButton -label "linear" -onCommand "$inTangent = \"linear\""`;
		$inClamped = `radioButton -label "clamped" -onCommand "$inTangent = \"clamped\""`;
		$inFlat = `radioButton -label "flat" -onCommand "$inTangent = \"flat\""`;
		$inPlateau = `radioButton -label "plateau" -onCommand "$inTangent = \"plateau\""`;
		setParent ..;
	radioCollection -edit -select $inSpline $inRadioButton;
	setParent charsetAdvancedSwitchLayout;
	
	columnLayout;
	text -label "Select your out\n tangent type";
	string $outRadioButton = `radioCollection`;
	string $outSpline, $outLinear, $outClamped, $outFlat, $outPlateau, $outStepped;
	string $outTangent = "spline";
		$outSpline = `radioButton -label "spline" -onCommand "$outTangent = \"spline\""`;
		$outLinear = `radioButton -label "linear" -onCommand "$outTangent = \"linear\""`;
		$outClamped = `radioButton -label "clamped" -onCommand "$outTangent = \"clamped\""`;
		$outFlat = `radioButton -label "flat" -onCommand "$outTangent = \"flat\""`;
		$outPlateau = `radioButton -label "plateau" -onCommand "$outTangent = \"plateau\""`;
		$outStepped = `radioButton -label "stepped" -onCommand "$outTangent = \"step\""`;
	radioCollection -edit -select $outSpline $outRadioButton;
	setParent charsetAdvancedSwitchLayout;
	
	
	string $button1 = `button -label "Change Tangents" -width 150`;
	string $button2 = `button -label "Cancel" -width 150`;
	button -edit -command ("deleteUI tangentWindowChar;") $button2;
	button -edit -command ("changeTangents $inTangent $outTangent;") $button1;
	button -label "Graph Editor" -width 150 -command GraphEditor;
	button -label "Dope Sheet Editor" -width 150 -command DopeSheetEditor;
	setParent charsetAdvancedSwitchLayout;
	
	setParent tabs;
	
//populate the scroll list without user input
updateCharacterSets;

showWindow;

}

///
/// End Character Set Menu System
///

///
/// Begin No Character Set Menu System
///

global proc noCharSetTangents(){
//delete the window if it already exists
if (`window -exists tangentWindowNoChar`){
    deleteUI tangentWindowNoChar;
}


	// Base window settings
	window
		-title "Tangent Switcher"
		-menuBar true
		-sizeable true
		-topLeftCorner 185 55
		-widthHeight 317 308
		tangentWindowNoChar;

	// Create top menu items
	menu -label "Help";
	menuItem -label "Local help..." -command tanSwitcherHelp;
	menuItem -label "Online help..." -command tanSwitcherOnlineHelp;
	menu -label "About";
	menuItem -label "About Tangent Switcher" -command tanSwitcherAbout;
	
	// Main container for layout
	columnLayout
		-rowSpacing 10
		-adjustableColumn true
		-columnAlign "center"
		containerColumnLayout;
		
	// Start tab layout section
	tabLayout tabs;
	
	// Simple switch for no charset
	frameLayout -labelVisible false -height 240 -borderVisible false -marginHeight 10 "Simple Switch";
	rowColumnLayout
	-numberOfColumns 2
	-columnWidth 1 290
	-columnWidth 2 150
	-columnSpacing 1 10
	nocharsetSimpleSwitchLayout;
		
	columnLayout -columnWidth 300;
	text -label "Select your controls and click\n Stepped Tangents or Spline Tangents";
	button -label "Stepped Tangents" -width 150 -command noCharSteppedTangents;
	button -label "Flat Tangents" -width 150 -command noCharFlatTangents;
	button -label "Graph Editor" -width 150 -command GraphEditor;
	button -label "Dope Sheet Editor" -width 150 -command DopeSheetEditor;
	setParent nocharsetSimpleSwitchLayout;
	setParent tabs;

	// Advanced switch for charset
	frameLayout -labelVisible false -height 240 -borderVisible false -marginHeight 10 "Advanced Switch";
	rowColumnLayout
	-numberOfColumns 2
	-columnWidth 1 150
	-columnWidth 2 150
	-columnSpacing 1 10
	nocharsetAdvancedSwitchLayout;
	
	columnLayout;
	text -label "Select your in\n tangent type";
	string $inRadioButton = `radioCollection`;
	string $inSpline, $inLinear, $inClamped, $inFlat, $inPlateau, $inStepped;
	string $inTangent = "spline";
		$inSpline = `radioButton -label "spline" -onCommand "$inTangent = \"spline\""`;
		$inLinear = `radioButton -label "linear" -onCommand "$inTangent = \"linear\""`;
		$inClamped = `radioButton -label "clamped" -onCommand "$inTangent = \"clamped\""`;
		$inFlat = `radioButton -label "flat" -onCommand "$inTangent = \"flat\""`;
		$inPlateau = `radioButton -label "plateau" -onCommand "$inTangent = \"plateau\""`;
		setParent ..;
	radioCollection -edit -select $inSpline $inRadioButton;
	setParent nocharsetAdvancedSwitchLayout;
	
	columnLayout;
	text -label "Select your out\n tangent type";
	string $outRadioButton = `radioCollection`;
	string $outSpline, $outLinear, $outClamped, $outFlat, $outPlateau, $outStepped;
	string $outTangent = "spline";
		$outSpline = `radioButton -label "spline" -onCommand "$outTangent = \"spline\""`;
		$outLinear = `radioButton -label "linear" -onCommand "$outTangent = \"linear\""`;
		$outClamped = `radioButton -label "clamped" -onCommand "$outTangent = \"clamped\""`;
		$outFlat = `radioButton -label "flat" -onCommand "$outTangent = \"flat\""`;
		$outPlateau = `radioButton -label "plateau" -onCommand "$outTangent = \"plateau\""`;
		$outStepped = `radioButton -label "stepped" -onCommand "$outTangent = \"step\""`;
	radioCollection -edit -select $outSpline $outRadioButton;
	setParent nocharsetAdvancedSwitchLayout;
	
	
	string $button1 = `button -label "Change Tangents" -width 150`;
	string $button2 = `button -label "Cancel" -width 150`;
	button -edit -command ("deleteUI tangentWindowNoChar;") $button2;
	button -edit -command ("noCharChangeTangents $inTangent $outTangent;") $button1;
	button -label "Graph Editor" -width 150 -command GraphEditor;
	button -label "Dope Sheet Editor" -width 150 -command DopeSheetEditor;
	setParent nocharsetAdvancedSwitchLayout;
	
	setParent tabs;
showWindow;
}

///
/// End No Character Set Menu System
///


///
/// Begin Character Set Procedures
///

//show what character sets are available to be used
global proc updateCharacterSets(){
	//to get the character sets available
	string $charSets[] = `ls -type "character"`;
	//clear the scroll list so no duplicates show up
	textScrollList -e -ra charSetScrollList;
	//iterate through and add all the character sets
	for($item in $charSets){
		textScrollList -e -a $item charSetScrollList;
	}
}

//simple switch

//change all tangents to linear/stepped tangents
global proc steppedTangents(){
	//select all the items that are active in the list
	string $sel[] = `textScrollList -q -si charSetScrollList`;
	//iterate through them and make the changes
	for ($node in $sel){
		select -add $node;
		//get the start and end frame
		int $begin = `playbackOptions -q -min`;
		int $end = `playbackOptions -q -max`;
		//concat the integers
		string $beginEnd = $begin + ":" + $end;
		//change the keyframe to linear in/stepped out
		keyTangent -itt "linear" -ott "step" -time $beginEnd;
		//deselect everything in the scrollList so we don't change things we don't want to next time
		textScrollList -e -deselectAll charSetScrollList;
		//clear all selections
		select -cl;
	}
}

//change all tangents to spline tangents
global proc flatTangents(){
	//select all the items that are active in the list
	string $sel[] = `textScrollList -q -si charSetScrollList`;
	//iterate through them and make the changes
	for ($node in $sel){
		select -add $node;
		//get the start and end frame
		int $begin = `playbackOptions -q -min`;
		int $end = `playbackOptions -q -max`;
		//concat the integers
		string $beginEnd = $begin + ":" + $end;
		//change the keyframe to spline in/spline out
		keyTangent -itt "flat" -ott "flat" -time $beginEnd;
		//deselect everything in the scrollList so we don't change things we don't want to next time
		textScrollList -e -deselectAll charSetScrollList;
		//clear all selections
		select -cl;
	}
}


//advanced switch

global proc changeTangents(string $inTangent, string $outTangent){
	//select all the items that are active in the list
	string $sel[] = `textScrollList -q -si charSetScrollList`;
	//iterate through them and make the changes
	for ($node in $sel){
		select -add $node;
		//get the start and end frame
		int $begin = `playbackOptions -q -min`;
		int $end = `playbackOptions -q -max`;
		//concat the integers
		string $beginEnd = $begin + ":" + $end;
		//change the keyframe 
		keyTangent -itt $inTangent -ott $outTangent -time $beginEnd;
		//deselect everything in the scrollList so we don't change things we don't want to next time
		textScrollList -e -deselectAll charSetScrollList;
		//clear all selections
		select -cl;
	}
}

///
/// End Character Set Procedures
///


///
/// Begin No Character Set Procedures
///

//simple switch

//change selected objects set tangents to linear/stepped tangents
global proc noCharSteppedTangents(){
	//get selected objects
	string $selected[] = `ls -sl`;
	// iterate through selection
	for ($object in $selected){
		int $begin = `playbackOptions -q -min`;
		int $end = `playbackOptions -q -max`;
		//concat the integers
		string $beginEnd = $begin + ":" + $end;
		//change the keyframe to linear in/stepped out
		keyTangent -itt "linear" -ott "step" -time $beginEnd;
		//clear all selections
		select -cl;
	}
}

//change selected objects tangents to flat tangents
global proc noCharFlatTangents(){
	//get selected objects
	string $selected[] = `ls -sl`;
	// iterate through selection
	for ($object in $selected){
		int $begin = `playbackOptions -q -min`;
		int $end = `playbackOptions -q -max`;
		//concat the integers
		string $beginEnd = $begin + ":" + $end;
		//change the keyframe to linear in/stepped out
		keyTangent -itt "flat" -ott "flat" -time $beginEnd;
		//clear all selections
		select -cl;
	}
}

//advanced switch

//change selected objects tangents to the user selected tangents
global proc noCharChangeTangents(string $inTangent, string $outTangent){
	//get selected objects
	string $selected[] = `ls -sl`;
	// iterate through selection
	for ($object in $selected){
		//get the start and end frame
		int $begin = `playbackOptions -q -min`;
		int $end = `playbackOptions -q -max`;
		//concat the integers
		string $beginEnd = $begin + ":" + $end;
		//change the keyframe 
		keyTangent -itt $inTangent -ott $outTangent -time $beginEnd;
		//clear all selections
		select -cl;
	}
}

///
/// Global Help and About Functions
///

global proc tanSwitcherHelp(){
//delete the prompting window
if (`window -exists charSethelpWindow`){
  deleteUI charSethelpWindow;
}

window -height 185 -title "Help" -titleBar on -width 461 charSethelpWindow;
	columnLayout;
		text -height 25 -label "How to use:" -width 400;
		text -height 300 -label "Click your shelf button and a window will pop up.\n This will only change the keys that are currently displayed in your timeline.\n Your available character sets will be displayed for you.\n Select which ones you wish to modify. If you want to use the simple\n tangent modifier, select whether you want to switch\n them to stepped or spline and that's that. If you want to use the advanced tangent\n modifier, select your in tangent and out tangent and click change tangents." -width 450;


showWindow;
}

global proc tanSwitcherAbout(){
//delete the prompting window
if (`window -exists aboutWindow`){
  deleteUI aboutWindow;
}
window -height 193 -title "About" -titleBar on -width 316 aboutWindow;
	columnLayout;
		text -height 25 -label "About" -width 300;
		text -height 250 -label "Script created by John P. Neumann\n Inquiries about script can be sent to:\njohn@animateshmanimate.com\nLicensing:\nCopyright (c) 2009, John P. Neumann\nAll rights reserved.\nThis work is licensed under the 3-clause BSD\n (`New BSD License`) license.\n Further license information contained\n within the download or\n at http://animateshmanimate.com." -width 300;

showWindow;
}

global proc tanSwitcherOnlineHelp(){
	showHelp -absolute "http://animateshmanimate.com/tangent-switcher-help/";
	
}

global proc tanSwitcherMaya2011(){
//delete the prompting window
if (`window -exists maya2011Window`){
  deleteUI maya2011Window;
}
window -height 193 -title "You're using Maya 2011..." -titleBar on -width 316 maya2011Window;
	columnLayout;
		text -height 25 -label "There's a better version for you..." -width 300;
		text -height 75 -label "You're using a version of Maya that supports the\n QT Interface. It functions better and looks nicer,\n so I'd suggest using that one. However, this one\n will work fine in 2011, so as you noticed,\n the script still worked." -width 300;

showWindow;
}